cmake_minimum_required (VERSION 2.8.12)
project (qdb-api-jni)

# SWIG
find_package(SWIG REQUIRED)
include(${SWIG_USE_FILE})
set(CMAKE_SWIG_FLAGS -package com.b14.qdb.jni)
set(CMAKE_SWIG_OUTDIR jni)

# JNI
find_package(JNI REQUIRED)
include_directories(${JNI_INCLUDE_DIRS})

# Quasardb C API
include_directories(qdb/include)
link_directories(qdb/lib)

# CPack
set(CPACK_PACKAGE_VERSION_MAJOR "1")
set(CPACK_PACKAGE_VERSION_MINOR "2")
set(CPACK_PACKAGE_VERSION_PATCH "0")
set(CPACK_INCLUDE_TOPLEVEL_DIRECTORY 0)
include(CPack)

# Extra resource files on Windows
if(WIN32)
    set(JAVA_API_RESOURCE
        resource.h
        targetver.h
        qdb_java_api.rc
    )
endif()

# Compilation flags
if(CMAKE_CXX_COMPILER_ID MATCHES "(GNU|Clang)")
    add_compile_options(
        -std=c++11
        -Wno-strict-aliasing
        -Wno-sign-compare        
    )
endif()

set_source_files_properties(qdb_java.i PROPERTIES CPLUSPLUS ON)
swig_add_module(qdb_java_api java qdb_java.i ${JAVA_API_RESOURCE})
swig_link_libraries(qdb_java_api qdb_api ${JAVA_JVM_LIBRARY})

# .java files generated by SWIG
install(
    DIRECTORY ${CMAKE_BINARY_DIR}/jni
    DESTINATION .
    FILES_MATCHING PATTERN "*.java"
)

# .java files generated by SWIG
install(
    DIRECTORY ${CMAKE_BINARY_DIR}/jni
    DESTINATION .
    FILES_MATCHING PATTERN "*.java"
)

# Name of the folder that contains the .dll or the .so
if(WIN32)
    set(SHARED_LIB_DIR "bin")
else()
    set(SHARED_LIB_DIR "lib")
endif()

# .java files generated by SWIG
install(
    DIRECTORY ${CMAKE_SOURCE_DIR}/qdb/${SHARED_LIB_DIR}
    DESTINATION .
)

# The JNI library
install(
    FILES $<TARGET_FILE:qdb_java_api>
    DESTINATION ${SHARED_LIB_DIR}
)
